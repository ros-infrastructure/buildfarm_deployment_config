# Jenkins username and password the agents should use to authenticate with the client.
# Both master and repo machines have specific agents: agent_on_master and building_repostory respectively
# That make use of this configuration as well.
# If you use the GitHub authentication plugin with Jenkins you will want to set this to a GitHub username and access token.
jenkins::slave::ui_user: 'admin'
jenkins::slave::ui_pass: 'changeme'

# This should be unchanged so that the masterurl always uses the hosts entry to reach master.
jenkins::slave::masterurl: 'http://master:8080'

master::ip: 172.30.1.145
repo::ip: 172.30.1.69

# change this to match the timezone that this buildfarm is located in.
timezone: 'America/Los_Angeles'

# SSH keys to be added to each host.
# The jenkins-agent public key is one you'll want to generate specifically for your deployment.
# An example:
#    $ ssh-keygen -t rsa -b 4096 -C "jenkins-agent@my-buildfarm" -f buildfarm_deployment_rsa
# Then copy the type and key in buildfarm_deployment_rsa.pub into the jenkins-agent@my-buildfarm key field below.
# The user field should remain jenkins-agent so it can be used to authenticate with the jenkins-agent user on the repo host.
#
# The contents of the private key in the example above buildfarm_deployment_rsa
# should be copied to the `jenkins::private_ssh_key` field of hiera/hieradata/buildfarm_role/master.yaml
# where it will be added via ssh-agent to running jenkins jobs on all agents.
ssh_keys:
    'jenkins-agent@my-buildfarm':
        key: REPLACE_WITH_AGENT_SSH_PUBLIC_KEY
        type: REPLACE_WITH_AGENT_SSH_KEY_TYPE
        user: jenkins-agent
        require: User[jenkins-agent]
    ## If you wish to add keys for administrative access you can do so as well.
    ## Additional keys will not be accessible to jenkins agents without additional configuraiton.
    #'adminuser@my-buildfarm':
    #    key: REPLACE_WITH_YOUR_ADMIN_SSH_PUBLIC_KEY
    #    type: REPLACE_WITH_YOUR_ADMIN_SSH_KEY_TYPE
    #   user: root


# if `autoreconfigure` is true this will set a cron task to re-run puppet periodically.
# Do not autoreconfigure your master machine during normal running, doing so will overwrite
# any configuration changes made since provisioning.
autoreconfigure: false
# Pay special attention to the Git branch name that appears twice in the invocation below.
autoreconfigure::command: 'bash -c "cd /root/buildfarm_deployment_config && git fetch origin xenialize && git reset --hard origin/xenialize && ./reconfigure.bash"'

# This docker option is being removed from the upstream puppetlabs-docker module.
# It isn't required on Ubuntu Xenial and causes an error when deploying to AWS with the default AWS kernel.
#
# By the time our project is able to move to the new puppet module (requires puppet >= 4.0) this option will probably
# be removed.
# https://github.com/puppetlabs/puppetlabs-docker/issues/38
docker::manage_kernel: false

# Classes to be pulled in via hiera_include classes.
#classes:
    # Enables the New Relic sysmon daemon.
    # A license key / api key is required to use it.
    #- nrsysmond
# License key required for nrsysmond class above
# nrsysmond::license_key: xxxyyyyzzzz
