# Jenkins username and password the agents should use to authenticate with the client.
# Both master and repo machines have specific agents: agent_on_master and building_repostory respectively
# That make use of this configuration as well.
# If you use the GitHub authentication plugin with Jenkins you will want to set this to a GitHub username and access token.
jenkins::slave::ui_user: 'admin'
jenkins::slave::ui_pass: 'changeme'

# This should be unchanged so that the masterurl always uses the hosts entry to reach master.
jenkins::slave::masterurl: 'http://master:8080'

master::ip: 172.30.1.145
repo::ip: 172.30.1.69

# change this to match the timezone that this buildfarm is located in.
timezone: 'America/Los_Angeles'

# SSH keys to be added to each host.
# The jenkins-agent public key is one you'll want to generate specifically for your deployment.
# An example:
#    $ ssh-keygen -t rsa -b 4096 -C "jenkins-agent@my-buildfarm" -f buildfarm_deployment_rsa
# Then copy the type and key in buildfarm_deployment_rsa.pub into the jenkins-agent@my-buildfarm key field below.
# The user field should remain jenkins-agent so it can be used to authenticate with the jenkins-agent user on the repo host.
#
# The contents of the private key in the example above buildfarm_deployment_rsa
# should be copied to the `jenkins::private_ssh_key` field of hiera/hieradata/buildfarm_role/master.yaml
# where it will be added via ssh-agent to running jenkins jobs on all agents.
ssh_keys:
  # Using the `buildfarm_deployment_rsa.pub` in the above example
  # you'll split the file contentsinto three different components separated by spaces:
  # * type: always ssh-rsa for rsa keys but different for other key types.
  # * public key value: The verbatim text of your public key base64-encoded.
  #   Depending on the key length this may be very long and include one or two trailing `=` of padding.
  # * comment: a plaintext "comment" which is generally used as a label identifying the key.
  # For example consider the key below:
  #     ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQCuIjV8RI7QOay95BAOuv9NlaKlm0xMfD9Q12ynKPElW+1cYhOmdmqrRqavbYxD9v2wB4hRl7VDsJak0w21UakyfKAZjhhmiMUA1yaQtJCKvw5RFbM6O/QmPNAnQDaVR2X1tRW5DVvbO2Z7ppQIHD3Ln3t5yYI/fwOgfBIsgr09Pw== jenkins-agent@my-buildfarm
  # * The type is `ssh-rsa`.
  # * The key value is `AAAAB3NzaC1yc2EAAAADAQABAAAAgQCuIjV8RI7QOay95BAOuv9NlaKlm0xMfD9Q12ynKPElW+1cYhOmdmqrRqavbYxD9v2wB4hRl7VDsJak0w21UakyfKAZjhhmiMUA1yaQtJCKvw5RFbM6O/QmPNAnQDaVR2X1tRW5DVvbO2Z7ppQIHD3Ln3t5yYI/fwOgfBIsgr09Pw==`.
  # * The comment is `jenkins-agent@my-buildfarm`.
  #
  # Use the comment as the key name
  'jenkins-agent@my-buildfarm':
      type: REPLACE_WITH_AGENT_SSH_KEY_TYPE
      key: REPLACE_WITH_AGENT_SSH_KEY
      user: jenkins-agent
      require: User[jenkins-agent]
    ## If you wish to add keys for administrative access you can do so as well.
    ## Additional keys will not be accessible to jenkins agents without additional configuraiton.
    #'adminuser@my-buildfarm':
    #    key: REPLACE_WITH_YOUR_ADMIN_SSH_PUBLIC_KEY
    #    type: REPLACE_WITH_YOUR_ADMIN_SSH_KEY_TYPE
    #   user: root


# Known hosts to add to the jenkins-agent user.
# Necessary to avoid build failures requiring interactive approval of a new
# host.
# You should definitely add the host key for your `repo` machine and any
# other machines you will connect to during builds.
# Assuming you can access your repo host via ssh from your dev workstation, the command:
#     ssh repo -T cat /etc/ssh/ssh_host_ed25519_key.pub
# will print your ed25519 host key which you can paste below
ssh_host_keys:
  repo: repo ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIA+bpD1Hf9LB+VFN6V6xdRsTi05gPHd0l7LhWbDZpAQM

# if `autoreconfigure` is true this will set a cron task to re-run puppet periodically.
# Do not autoreconfigure your master machine during normal running, doing so will overwrite
# any configuration changes made since provisioning.
autoreconfigure: false
# Pay special attention to the Git branch name that appears twice in the invocation below.
autoreconfigure::command: 'bash -c "cd /root/buildfarm_deployment_config && git fetch origin pre-jep-200 && git reset --hard origin/pre-jep-200 && ./reconfigure.bash"'

# This docker option is being removed from the upstream puppetlabs-docker module.
# It isn't required on Ubuntu Xenial and causes an error when deploying to AWS with the default AWS kernel.
#
# By the time our project is able to move to the new puppet module (requires puppet >= 4.0) this option will probably
# be removed.
# https://github.com/puppetlabs/puppetlabs-docker/issues/38
docker::manage_kernel: false

# Unless you have explicit needs with the docker version
# The values below should not be changed.
docker::package_name: docker-ce
docker::package_source_location: https://download.docker.com/linux/ubuntu
docker::package_key_source: https://download.docker.com/linux/ubuntu/gpg
docker::package_key: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
docker::package_release: xenial
docker::package_repos: stable
docker::service_overrides_template: agent_files/docker-service-overrides.conf.erb

# Classes to be pulled in via hiera_include classes.
#classes:
    # Enables the New Relic sysmon daemon.
    # A license key / api key is required to use it.
    #- nrsysmond
# License key required for nrsysmond class above
# nrsysmond::license_key: xxxyyyyzzzz
